{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.calendly.com"
    }
  ],
  "info": {
    "description": "Calendlyâ€™s API is [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer)-based and has predictable resource-oriented URLs. It uses **JSON** for request and response bodies and standard HTTP methods, authentication, and response codes.<br>\n\n##### Authenticate with personal access tokens or OAuth 2.0\n\nTo access Calendly data through the API, you can authenticate with **personal access tokens** or **OAuth 2.0**. To learn more about these authentication methods and when and how to use them, see [Getting Started with the Calendly API](https://developer.calendly.com/getting-started).",
    "version": "2.0.0",
    "title": "Calendly API",
    "contact": {
      "email": "support+developer@calendly.com",
      "name": "Calendly Developer Support",
      "url": "https://developer.calendly.com/get-help"
    },
    "termsOfService": "https://developer.calendly.com/developer-policy"
  },
  "tags": [
    {
      "name": "Activity Log"
    },
    {
      "name": "Availability"
    },
    {
      "name": "Data Compliance"
    },
    {
      "name": "Event Types"
    },
    {
      "name": "Groups"
    },
    {
      "name": "Organizations"
    },
    {
      "name": "Routing Forms"
    },
    {
      "name": "Scheduled Events"
    },
    {
      "name": "Scheduling Links"
    },
    {
      "name": "Shares"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "Trials"
    },
    {
      "name": "Users"
    },
    {
      "name": "Webhooks"
    },
    {
      "name": "Polls"
    }
  ],
  "paths": {
    "/scheduling_links": {
      "post": {
        "tags": ["Scheduling Links"],
        "summary": "Create Single-Use Scheduling Link",
        "operationId": "post-scheduling_links",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "required": ["booking_url"],
                      "properties": {
                        "booking_url": {
                          "type": "string",
                          "description": "Scheduling link url",
                          "format": "uri",
                          "example": "https://calendly.com/d/abcd-brv8/15-minute-meeting"
                        },
                        "owner": {
                          "type": "string",
                          "description": "A link to the resource that owns this Scheduling Link (currently, this is always an Event Type)",
                          "format": "uri",
                          "example": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2"
                        },
                        "owner_type": {
                          "type": "string",
                          "example": "EventType",
                          "enum": ["EventType"],
                          "description": "Resource type (currently, this is always EventType)"
                        }
                      }
                    }
                  },
                  "required": ["resource"]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "booking_url": "https://calendly.com/d/abcd-brv8/15-minute-meeting",
                        "owner": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2",
                        "owner_type": "EventType"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Creates a single-use scheduling link.",
        "security": [
          {
            "oauth2": []
          },
          {
            "personal_access_token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "max_event_count": {
                    "type": "number",
                    "description": "The max number of events that can be scheduled using this scheduling link.",
                    "enum": [1],
                    "example": 1
                  },
                  "owner": {
                    "type": "string",
                    "description": "A link to the resource that owns this Scheduling Link (currently, this is always an Event Type)",
                    "format": "uri",
                    "example": "https://api.calendly.com/event_types/012345678901234567890"
                  },
                  "owner_type": {
                    "type": "string",
                    "example": "EventType",
                    "enum": ["EventType"],
                    "description": "Resource type (currently, this is always EventType)"
                  }
                },
                "required": ["max_event_count", "owner", "owner_type"]
              },
              "examples": {
                "Create Single Use Link": {
                  "value": {
                    "max_event_count": 1,
                    "owner": "https://api.calendly.com/event_types/012345678901234567890",
                    "owner_type": "EventType"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.calendly.com/oauth/authorize",
            "tokenUrl": "https://auth.calendly.com/oauth/token",
            "scopes": {},
            "refreshUrl": "https://auth.calendly.com/oauth/token"
          }
        },
        "description": "Put the access token in the `Authorization: Bearer <TOKEN>` header"
      },
      "personal_access_token": {
        "type": "http",
        "scheme": "bearer",
        "description": "Put the access token in the `Authorization: Bearer <TOKEN>` header"
      }
    },
    "schemas": {
      "User": {
        "x-tags": ["Users"],
        "type": "object",
        "description": "Information about the user.",
        "title": "User",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "name": "John Doe",
            "slug": "acmesales",
            "email": "test@example.com",
            "scheduling_url": "https://calendly.com/acmesales",
            "timezone": "America/New York",
            "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
            "created_at": "2019-01-02T03:04:05.678123Z",
            "updated_at": "2019-08-07T06:05:04.321123Z",
            "current_organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the user",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          },
          "name": {
            "type": "string",
            "description": "The user's name (human-readable format)",
            "example": "John Doe"
          },
          "slug": {
            "type": "string",
            "description": "The portion of URL for the user's scheduling page (where invitees book sessions), rendered in a human-readable format",
            "example": "acmesales"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address",
            "example": "test@example.com"
          },
          "scheduling_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the user's Calendly landing page (that lists all the user's event types)",
            "example": "https://calendly.com/acmesales"
          },
          "timezone": {
            "type": "string",
            "example": "America/New York",
            "description": "The time zone to use when presenting time to the user"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "description": "The URL of the user's avatar (image)",
            "example": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z",
            "description": "The moment when the user's record was created (e.g. \"2020-01-02T03:04:05.678123Z\")"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321123Z",
            "description": "The moment when the user's record was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")"
          },
          "current_organization": {
            "type": "string",
            "description": "A unique reference to the user's current organization",
            "format": "uri",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          }
        },
        "required": [
          "uri",
          "name",
          "slug",
          "email",
          "scheduling_url",
          "timezone",
          "avatar_url",
          "created_at",
          "updated_at",
          "current_organization"
        ]
      },
      "EventType": {
        "x-tags": ["Event Types"],
        "type": "object",
        "description": "A configuration for an Event",
        "title": "Event Type",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/event_types/AAAAAAAAAAAAAAAA",
            "name": "15 Minute Meeting",
            "active": true,
            "booking_method": "instant",
            "slug": "acmesales",
            "scheduling_url": "https://calendly.com/acmesales",
            "duration": 30,
            "kind": "solo",
            "pooling_type": "round_robin",
            "kind_description": "Round Robin",
            "type": "StandardEventType",
            "color": "#fff200",
            "created_at": "2019-01-02T03:04:05.678123Z",
            "updated_at": "2019-08-07T06:05:04.321123Z",
            "internal_note": "Event type note",
            "description_plain": "Event type description",
            "description_html": "<p>Event type description</p>",
            "profile": {
              "type": "User",
              "name": "Tamara Jones",
              "owner": "https://api.calendly.com/users/ABC123"
            },
            "secret": true,
            "deleted_at": null,
            "admin_managed": false,
            "custom_questions": [
              {
                "name": "Company Name",
                "type": "string",
                "position": 0,
                "enabled": true,
                "required": true,
                "answer_choices": null,
                "include_other": false
              },
              {
                "name": "What would you like to discuss?",
                "type": "text",
                "position": 0,
                "enabled": true,
                "required": true,
                "answer_choices": null,
                "include_other": false
              },
              {
                "name": "Number of employees",
                "answer_choices": ["1", "2-10", "11-20", "20+"],
                "enabled": true,
                "include_other": true,
                "position": 2,
                "required": false,
                "type": "single_select"
              },
              {
                "name": "Multi-Select Question",
                "answer_choices": [
                  "Answer 1",
                  "Answer 2",
                  "Answer 3",
                  "Answer 4"
                ],
                "enabled": true,
                "include_other": true,
                "position": 2,
                "required": false,
                "type": "multi_select"
              },
              {
                "name": "Phone Number",
                "type": "phone_number",
                "position": 0,
                "enabled": true,
                "required": true,
                "answer_choices": null,
                "include_other": false
              }
            ]
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the event type",
            "format": "uri",
            "example": "https://api.calendly.com/event_types/AAAAAAAAAAAAAAAA"
          },
          "name": {
            "type": "string",
            "description": "The event type name (in human-readable format)",
            "example": "15 Minute Meeting",
            "nullable": true
          },
          "active": {
            "description": "Indicates if the event is active or not.",
            "type": "boolean"
          },
          "slug": {
            "type": "string",
            "description": "The portion of the event type's URL that identifies a specific web page (in a human-readable format)",
            "example": "acmesales",
            "nullable": true
          },
          "scheduling_url": {
            "type": "string",
            "description": "The URL of the userâ€™s scheduling site where invitees book this event type",
            "format": "uri",
            "example": "https://calendly.com/acmesales"
          },
          "duration": {
            "description": "The length of sessions booked with this event type",
            "type": "number",
            "example": 30
          },
          "kind": {
            "description": "Indicates if the event type is \"solo\" (belongs to an individual user) or \"group\"",
            "type": "string",
            "enum": ["solo", "group"]
          },
          "pooling_type": {
            "description": "Indicates if the event type is \"round robin\" (alternates between hosts) or \"collective\" (invitees pick a time when all participants are available) or \"null\" (the event type doesnâ€™t consider the availability of a group participants)",
            "type": "string",
            "enum": ["round_robin", "collective"],
            "nullable": true
          },
          "type": {
            "description": "Indicates if the event type is \"AdhocEventType\" (ad hoc event) or \"StandardEventType\" (standard event type)",
            "type": "string",
            "enum": ["StandardEventType", "AdhocEventType"]
          },
          "color": {
            "description": "The hexadecimal color value of the event type's scheduling page",
            "type": "string",
            "pattern": "^#[a-f\\d]{6}$",
            "example": "#fff200"
          },
          "created_at": {
            "description": "The moment the event type was created (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z"
          },
          "updated_at": {
            "description": "The moment the event type was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321123Z"
          },
          "internal_note": {
            "type": "string",
            "description": "Contents of a note that may be associated with the event type",
            "example": "Internal note",
            "nullable": true
          },
          "description_plain": {
            "type": "string",
            "description": "The event type's description (in non formatted text)",
            "example": "15 Minute Meeting",
            "nullable": true
          },
          "description_html": {
            "type": "string",
            "description": "The event type's description (formatted with HTML)",
            "example": "<p>15 Minute Meeting</p>",
            "nullable": true
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "secret": {
            "type": "boolean",
            "description": "Indicates if the event type is hidden on the owner's main scheduling page"
          },
          "booking_method": {
            "type": "string",
            "enum": ["instant", "poll"],
            "example": "poll",
            "description": "Indicates if the event type is for a poll or an instant booking"
          },
          "custom_questions": {
            "type": "array",
            "items": {
              "$ref": "models/EventTypeCustomQuestion.yaml"
            }
          },
          "deleted_at": {
            "type": "string",
            "description": "The moment the event type was deleted (e.g. \"2020-01-02T03:04:05.678123Z\"). Since event types can be deleted but their scheduled events remain it's useful to fetch a deleted event type when you still require event type data for a scheduled event.",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z",
            "nullable": true
          },
          "kind_description": {
            "type": "string",
            "enum": ["Collective", "Group", "One-on-One", "Round Robin"],
            "description": "A formatted description of the kind of event type."
          },
          "admin_managed": {
            "type": "boolean",
            "description": "Indicates if this event type is managed by an organization admin"
          }
        },
        "required": [
          "uri",
          "name",
          "active",
          "slug",
          "scheduling_url",
          "duration",
          "kind",
          "pooling_type",
          "type",
          "color",
          "created_at",
          "updated_at",
          "internal_note",
          "description_plain",
          "description_html",
          "profile",
          "secret",
          "booking_method",
          "custom_questions",
          "deleted_at",
          "kind_description",
          "admin_managed"
        ]
      },
      "Profile": {
        "x-tags": ["Event Types"],
        "type": "object",
        "nullable": true,
        "description": "The publicly visible profile of a User or a Team that's associated with the Event Type (note: some Event Types don't have profiles)",
        "title": "Profile",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates if the profile belongs to a \"user\" (individual) or \"team\"",
            "enum": ["User", "Team"],
            "example": "User"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for the profile of the user that's associated with the event type",
            "example": "Tamara Jones"
          },
          "owner": {
            "type": "string",
            "description": "The unique reference to the user associated with the profile",
            "format": "uri",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        },
        "required": ["type", "name", "owner"],
        "x-examples": {
          "Example": {
            "type": "User",
            "name": "Tamara Jones",
            "owner": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        }
      },
      "Event": {
        "x-tags": ["Scheduled Events"],
        "type": "object",
        "description": "Information about a scheduled meeting",
        "title": "Event",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2",
            "name": "15 Minute Meeting",
            "status": "active",
            "start_time": "2019-08-24T14:15:22.123456Z",
            "end_time": "2019-08-24T14:15:22.123456Z",
            "event_type": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2",
            "location": {
              "type": "physical",
              "location": "string"
            },
            "invitees_counter": {
              "total": 0,
              "active": 0,
              "limit": 0
            },
            "created_at": "2019-01-02T03:04:05.678123Z",
            "updated_at": "2019-01-02T03:04:05.678123Z",
            "event_memberships": [
              {
                "user": "https://api.calendly.com/users/GBGBDCAADAEDCRZ2"
              }
            ],
            "event_guests": [
              {
                "email": "user@example.com",
                "created_at": "2019-08-24T14:15:22.123456Z",
                "updated_at": "2019-08-24T14:15:22.123456Z"
              }
            ]
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the resource",
            "example": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2"
          },
          "name": {
            "type": "string",
            "description": "The event name",
            "example": "15 Minute Meeting",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["active", "canceled"],
            "description": "Indicates if the event is \"active\" or \"canceled\""
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The moment the event was scheduled to start in UTC time (e.g. \"2020-01-02T03:04:05.678123Z\")."
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "The moment the event was scheduled to end in UTC time (e.g. \"2020-01-02T03:04:05.678123Z\")"
          },
          "event_type": {
            "type": "string",
            "description": "The event type associated with this event",
            "format": "uri",
            "example": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2"
          },
          "location": {
            "$ref": "models/Location.yaml"
          },
          "invitees_counter": {
            "type": "object",
            "required": ["total", "active", "limit"],
            "properties": {
              "total": {
                "type": "number",
                "description": "Total invitees for an event, including invitees that have canceled"
              },
              "active": {
                "type": "number",
                "description": "Total invitees for an event that have not canceled"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of active invitees that can book the event"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The moment when the event was created (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "example": "2019-01-02T03:04:05.678123Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The moment when the event was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "example": "2019-01-02T03:04:05.678123Z"
          },
          "event_memberships": {
            "type": "array",
            "description": "Event membership list",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "format": "uri",
                  "description": "Canonical reference (unique identifier) for the user",
                  "example": "https://api.calendly.com/users/GBGBDCAADAEDCRZ2"
                }
              },
              "required": ["user"]
            }
          },
          "event_guests": {
            "type": "array",
            "description": "Additional people added to an event by an invitee",
            "items": {
              "$ref": "#/components/schemas/Guest"
            }
          },
          "cancellation": {
            "$ref": "#/components/schemas/Cancellation"
          },
          "calendar_event": {
            "$ref": "#/components/schemas/CalendarEvent"
          }
        },
        "required": [
          "uri",
          "name",
          "status",
          "start_time",
          "end_time",
          "event_type",
          "location",
          "invitees_counter",
          "created_at",
          "updated_at",
          "event_memberships",
          "event_guests",
          "calendar_event"
        ]
      },
      "CalendarEvent": {
        "x-tags": ["Scheduled Events"],
        "type": "object",
        "description": "Information about the calendar event from the calendar provider.",
        "title": "CalendarEvent",
        "x-examples": {
          "Example": {
            "kind": "google",
            "external_id": "8suu9k3hj00mni03ss12ba0ce0"
          }
        },
        "nullable": true,
        "properties": {
          "kind": {
            "type": "string",
            "description": "Indicates the calendar provider the event belongs to.",
            "example": "google",
            "enum": [
              "exchange",
              "google",
              "icloud",
              "outlook",
              "outlook_desktop"
            ]
          },
          "external_id": {
            "type": "string",
            "example": "8suu9k3hj00mni03ss12ba0ce0",
            "description": "the id provided from the calendar provider for this calendar event."
          }
        },
        "required": ["kind", "external_id"]
      },
      "Cancellation": {
        "x-tags": ["Scheduled Events"],
        "type": "object",
        "description": "Provides data pertaining to the cancellation of the Event",
        "properties": {
          "canceled_by": {
            "type": "string",
            "description": "Name of the person whom canceled"
          },
          "reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason that the cancellation occurred"
          },
          "canceler_type": {
            "type": "string",
            "enum": ["host", "invitee"]
          }
        },
        "required": ["canceled_by", "reason", "canceler_type"]
      },
      "Invitee": {
        "x-tags": ["Scheduled Events"],
        "type": "object",
        "description": "An individual who has been invited to meet with a Calendly member",
        "title": "Invitee",
        "x-examples": {
          "Invitee": {
            "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
            "created_at": "2020-11-23T17:51:18.327602Z",
            "email": "test@example.com",
            "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
            "first_name": "John",
            "last_name": "Doe",
            "name": "John Doe",
            "new_invitee": null,
            "old_invitee": null,
            "questions_and_answers": [],
            "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
            "rescheduled": false,
            "status": "active",
            "text_reminder_number": null,
            "timezone": "America/New_York",
            "tracking": {
              "utm_campaign": null,
              "utm_source": null,
              "utm_medium": null,
              "utm_content": null,
              "utm_term": null,
              "salesforce_uuid": null
            },
            "updated_at": "2020-11-23T17:51:18.341657Z",
            "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
            "canceled": false,
            "routing_form_submission": "https://api.calendly.com/routing_form_submissions/AAAAAAAAAAAAAAAA",
            "payment": {
              "external_id": "ch_AAAAAAAAAAAAAAAAAAAAAAAA",
              "provider": "stripe",
              "amount": 1234.56,
              "currency": "USD",
              "terms": "sample terms of payment (up to 1,024 characters)",
              "successful": true
            },
            "no_show": {
              "uri": "https://api.calendly.com/invitee_no_shows/6ee96ed4-83a3-4966-a278-cd19b3c02e09",
              "created_at": "2020-11-23T17:51:18.341657Z"
            },
            "reconfirmation": {
              "created_at": "2020-11-23T17:51:18.341657Z",
              "confirmed_at": "2020-11-23T20:01:18.341657Z"
            }
          },
          "Canceled Invitee": {
            "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
            "created_at": "2020-11-23T17:51:18.327602Z",
            "email": "test@example.com",
            "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
            "first_name": "John",
            "last_name": "Doe",
            "name": "John Doe",
            "new_invitee": null,
            "old_invitee": null,
            "questions_and_answers": [],
            "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
            "rescheduled": false,
            "status": "canceled",
            "text_reminder_number": null,
            "timezone": "America/New_York",
            "tracking": {
              "utm_campaign": null,
              "utm_source": null,
              "utm_medium": null,
              "utm_content": null,
              "utm_term": null,
              "salesforce_uuid": null
            },
            "updated_at": "2020-11-23T17:54:22.356897Z",
            "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
            "canceled": true,
            "cancellation": {
              "canceled_by": "John Doe",
              "reason": "Meeting Conflict"
            },
            "routing_form_submission": null,
            "payment": {
              "external_id": "ch_AAAAAAAAAAAAAAAAAAAAAAAA",
              "provider": "stripe",
              "amount": 1234.56,
              "currency": "USD",
              "terms": "sample terms of payment (up to 1,024 characters)",
              "successful": true
            },
            "reconfirmation": null
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the invitee",
            "example": "https://calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The inviteeâ€™s email address",
            "example": "test@example.com"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the invitee who booked the event when the event type is configured to use separate fields for first name and last name. Null when event type is configured to use a single field for name.",
            "example": "John",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the invitee who booked the event when the event type is configured to use separate fields for first name and last name. Null when event type is configured to use a single field for name.",
            "example": "Doe",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The inviteeâ€™s name (in human-readable format)",
            "example": "John Doe"
          },
          "status": {
            "type": "string",
            "enum": ["active", "canceled"],
            "description": "Indicates if the invitee is \"active\" or \"canceled\""
          },
          "questions_and_answers": {
            "type": "array",
            "description": "A collection of the invitee's responses to questions on the event booking confirmation form",
            "minItems": 0,
            "uniqueItems": true,
            "items": {
              "$ref": "models/InviteeQuestionAndAnswer.yaml"
            }
          },
          "timezone": {
            "type": "string",
            "description": "Time zone to use when displaying time to the invitee",
            "nullable": true
          },
          "event": {
            "type": "string",
            "format": "uri",
            "description": "A reference to the event",
            "example": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z",
            "description": "The moment when the event was created (e.g. \"2020-01-02T03:04:05.678123Z\")"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321123Z",
            "description": "The moment when the event was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")"
          },
          "tracking": {
            "$ref": "models/InviteeTracking.yaml"
          },
          "text_reminder_number": {
            "type": "string",
            "example": "+1 404-555-1234",
            "description": "The phone number to use when sending text (SMS) reminders",
            "nullable": true
          },
          "rescheduled": {
            "type": "boolean",
            "description": "Indicates if this invitee has rescheduled. If `true`, a reference to the new Invitee instance is provided in the `new_invitee` field."
          },
          "old_invitee": {
            "type": "string",
            "format": "uri",
            "description": "Reference to old Invitee instance that got rescheduled",
            "nullable": true
          },
          "new_invitee": {
            "type": "string",
            "format": "uri",
            "description": "Link to new invitee, after reschedule",
            "nullable": true
          },
          "cancel_url": {
            "type": "string",
            "format": "uri",
            "description": "Link to cancelling the event for the invitee"
          },
          "reschedule_url": {
            "type": "string",
            "format": "uri",
            "description": "Link to rescheduling the event for the invitee"
          },
          "routing_form_submission": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/routing_form_submissions/AAAAAAAAAAAAAAAA",
            "description": "Reference to a routing form submission that redirected the invitee to a booking page.",
            "nullable": true
          },
          "cancellation": {
            "$ref": "#/components/schemas/Cancellation"
          },
          "payment": {
            "description": "Invitee payment",
            "type": "object",
            "required": [
              "external_id",
              "provider",
              "amount",
              "currency",
              "terms",
              "successful"
            ],
            "nullable": true,
            "properties": {
              "external_id": {
                "type": "string",
                "description": "Unique identifier for the payment"
              },
              "provider": {
                "type": "string",
                "description": "Payment provider",
                "enum": ["stripe", "paypal"],
                "example": "stripe"
              },
              "amount": {
                "type": "number",
                "description": "The amount of the payment",
                "format": "float"
              },
              "currency": {
                "type": "string",
                "description": "The currency format that the payment is in.",
                "enum": ["AUD", "CAD", "EUR", "GBP", "USD"]
              },
              "terms": {
                "type": "string",
                "description": "Terms of the payment",
                "example": "sample terms of payment (up to 1,024 characters)",
                "nullable": true
              },
              "successful": {
                "type": "boolean",
                "description": "Indicates whether the payment was successfully processed"
              }
            }
          },
          "no_show": {
            "description": "Provides data pertaining to the associated no show for the Invitee",
            "type": "object",
            "required": ["uri", "created_at"],
            "nullable": true,
            "properties": {
              "uri": {
                "type": "string",
                "description": "Canonical reference (unique identifier) for the no show"
              },
              "created_at": {
                "type": "string",
                "example": "2019-01-02T03:04:05.678123Z",
                "format": "date-time",
                "description": "The moment when the no show was created"
              }
            }
          },
          "reconfirmation": {
            "type": "object",
            "description": "Assuming reconfirmation is enabled for the event type, when reconfirmation is requested this object is present with a `created_at` that reflects when the reconfirmation notification was sent. Once the invitee has reconfirmed the `confirmed_at` attribute will change from `null` to a timestamp that reflects when they took action.",
            "required": ["created_at", "confirmed_at"],
            "nullable": true,
            "properties": {
              "created_at": {
                "type": "string",
                "description": "When the reconfirmation was created.",
                "format": "date-time",
                "example": "2020-11-23T17:51:18.341657Z"
              },
              "confirmed_at": {
                "type": "string",
                "description": "When the Invitee confirmed their attendance.",
                "format": "date-time",
                "example": "2020-11-23T17:51:18.341657Z",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "uri",
          "email",
          "first_name",
          "last_name",
          "name",
          "status",
          "questions_and_answers",
          "timezone",
          "event",
          "created_at",
          "updated_at",
          "tracking",
          "text_reminder_number",
          "rescheduled",
          "old_invitee",
          "new_invitee",
          "cancel_url",
          "reschedule_url",
          "routing_form_submission",
          "payment",
          "no_show",
          "reconfirmation"
        ]
      },
      "Guest": {
        "x-tags": ["Scheduled Events"],
        "title": "Guest",
        "type": "object",
        "description": "An individual whom an invitee has invited to be a guest attendee to an event",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["email", "created_at", "updated_at"],
        "x-examples": {
          "Example": {
            "email": "user@example.com",
            "created_at": "2019-08-24T14:15:22.123456Z",
            "updated_at": "2019-08-24T14:15:22.123456Z"
          }
        }
      },
      "Organization": {
        "x-tags": ["Organizations"],
        "type": "object",
        "title": "Organization",
        "description": "Organization object",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical resource reference",
            "example": "https://api.calendly.com/organizations/012345678901234567890"
          },
          "plan": {
            "type": "string",
            "enum": [
              "basic",
              "essentials",
              "professional",
              "teams",
              "enterprise"
            ],
            "example": "professional",
            "description": "Active subscription plan or trial plan"
          },
          "stage": {
            "type": "string",
            "enum": ["trial", "free", "paid"],
            "example": "paid",
            "description": "Current stage of organization"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the organization was created.",
            "example": "2019-01-02T03:04:05.678123Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the organization was created or updated.",
            "example": "2019-08-07T06:05:04.321123Z"
          }
        },
        "required": ["uri", "plan", "stage", "created_at", "updated_at"]
      },
      "OrganizationMembership": {
        "x-tags": ["Organizations"],
        "type": "object",
        "title": "Organization Membership",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the membership",
            "example": "https://api.calendly.com/organization_memberships/AAAAAAAAAAAAAAAA"
          },
          "role": {
            "type": "string",
            "description": "The user's role in the organization",
            "enum": ["user", "admin", "owner"],
            "example": "admin"
          },
          "user": {
            "type": "object",
            "description": "Information about the user.",
            "required": [
              "uri",
              "name",
              "slug",
              "email",
              "scheduling_url",
              "timezone",
              "avatar_url",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "uri": {
                "type": "string",
                "format": "uri",
                "description": "Canonical reference (unique identifier) for the user",
                "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
              },
              "name": {
                "type": "string",
                "description": "The user's name (human-readable format)",
                "example": "John Doe"
              },
              "slug": {
                "type": "string",
                "description": "The portion of URL for the user's scheduling page (where invitees book sessions), rendered in a human-readable format",
                "example": "acmesales"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "The user's email address",
                "example": "test@example.com"
              },
              "scheduling_url": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the user's Calendly landing page (that lists all the user's event types)",
                "example": "https://calendly.com/acmesales"
              },
              "timezone": {
                "type": "string",
                "example": "America/New York",
                "description": "The time zone to use when presenting time to the user"
              },
              "avatar_url": {
                "type": "string",
                "nullable": true,
                "format": "uri",
                "description": "The URL of the user's avatar (image)",
                "example": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2019-01-02T03:04:05.678123Z",
                "description": "The moment when the user's record was created (e.g. \"2020-01-02T03:04:05.678123Z\")"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2019-08-07T06:05:04.321123Z",
                "description": "The moment when the user's record was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")"
              }
            }
          },
          "organization": {
            "type": "string",
            "format": "uri",
            "description": "A unique reference to the organization",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321123Z",
            "description": "The moment when the membership record was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z",
            "description": "The moment when the membership record was created (e.g. \"2020-01-02T03:04:05.678123Z\")"
          }
        },
        "required": [
          "uri",
          "role",
          "user",
          "organization",
          "updated_at",
          "created_at"
        ],
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/organization_memberships/AAAAAAAAAAAAAAAA",
            "role": "admin",
            "user": {
              "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
              "name": "John Doe",
              "slug": "acmesales",
              "email": "test@example.com",
              "scheduling_url": "https://calendly.com/acmesales",
              "timezone": "America/New York",
              "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
              "created_at": "2019-01-02T03:04:05.678123Z",
              "updated_at": "2019-08-07T06:05:04.321123Z"
            },
            "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "updated_at": "2019-08-07T06:05:04.321123Z",
            "created_at": "2019-01-02T03:04:05.678123Z"
          }
        }
      },
      "OrganizationInvitation": {
        "title": "Organization Invitation",
        "type": "object",
        "x-tags": ["Organizations"],
        "description": "Organization Invitation object",
        "properties": {
          "uri": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the organization invitation",
            "format": "uri",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA/invitations/BBBBBBBBBBBBBBBB"
          },
          "organization": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the organization",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          },
          "email": {
            "type": "string",
            "description": "The email address of the person who was invited to join the organization",
            "format": "email",
            "example": "test@example.com"
          },
          "status": {
            "type": "string",
            "description": "The status of the invitation (\"pending\", \"accepted\", or \"declined\")",
            "enum": ["pending", "accepted", "declined"],
            "example": "accepted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321123Z",
            "description": "The moment the invitation was created (e.g. â€œ2020-01-02T03:04:05.678123Z\")"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z",
            "description": "The moment the invitation was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")"
          },
          "last_sent_at": {
            "type": "string",
            "nullable": true,
            "description": "The moment the invitation was last sent (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z"
          },
          "user": {
            "type": "string",
            "format": "uri",
            "description": "When the invitation is accepted, a reference to the user who accepted the invitation",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        },
        "required": [
          "uri",
          "organization",
          "email",
          "status",
          "created_at",
          "updated_at",
          "last_sent_at"
        ],
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA/invitations/BBBBBBBBBBBBBBBB",
            "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "email": "test@example.com",
            "status": "accepted",
            "created_at": "2019-08-07T06:05:04.321123Z",
            "updated_at": "2019-01-02T03:04:05.678123Z",
            "last_sent_at": "2019-01-02T03:04:05.678123Z",
            "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        }
      },
      "WebhookPayload": {
        "x-tags": ["Webhooks"],
        "title": "Webhook Payload",
        "type": "object",
        "description": "Webhook Payload Object",
        "x-examples": {
          "Invitee Created": {
            "created_at": "2020-11-23T17:51:19.000000Z",
            "created_by": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "event": "invitee.created",
            "payload": {
              "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
              "created_at": "2020-11-23T17:51:18.327602Z",
              "email": "test@example.com",
              "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
              "name": "John Doe",
              "new_invitee": null,
              "old_invitee": null,
              "questions_and_answers": [],
              "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
              "rescheduled": false,
              "status": "active",
              "text_reminder_number": null,
              "timezone": "America/New_York",
              "tracking": {
                "utm_campaign": null,
                "utm_source": null,
                "utm_medium": null,
                "utm_content": null,
                "utm_term": null,
                "salesforce_uuid": null
              },
              "updated_at": "2020-11-23T17:51:18.341657Z",
              "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
              "canceled": false
            }
          },
          "Invitee Canceled": {
            "created_at": "2020-11-23T17:54:22.000000Z",
            "created_by": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "event": "invitee.canceled",
            "payload": {
              "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
              "created_at": "2020-11-23T17:51:18.327602Z",
              "email": "test@example.com",
              "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
              "name": "John Doe",
              "new_invitee": null,
              "old_invitee": null,
              "questions_and_answers": [],
              "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
              "rescheduled": false,
              "status": "canceled",
              "text_reminder_number": null,
              "timezone": "America/New_York",
              "tracking": {
                "utm_campaign": null,
                "utm_source": null,
                "utm_medium": null,
                "utm_content": null,
                "utm_term": null,
                "salesforce_uuid": null
              },
              "updated_at": "2020-11-23T17:54:22.356897Z",
              "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
              "canceled": true,
              "cancellation": {
                "canceled_by": "John Doe",
                "reason": "Meeting Conflict"
              }
            }
          },
          "Routing Form Submission Created": {
            "event": "routing_form_submission.created",
            "created_at": "2022-05-15T14:59:59.000000Z",
            "created_by": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "payload": {
              "uri": "https://api.calendly.com/routing_form_submissions/AAAAAAAAAAAAAAAA",
              "routing_form": "https://api.calendly.com/routing_forms/AAAAAAAAAAAAAAAA",
              "questions_and_answers": [
                {
                  "question_uuid": "123e4567-e89b-12d3-a456-426614174000",
                  "question": "What is your industry?",
                  "answer": "IT & Software"
                }
              ],
              "tracking": {
                "utm_campaign": null,
                "utm_source": null,
                "utm_medium": null,
                "utm_content": null,
                "utm_term": null,
                "salesforce_uuid": null
              },
              "result": {
                "type": "event_type",
                "value": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2"
              },
              "submitter": "https://calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
              "submitter_type": "Invitee",
              "created_at": "2022-05-15T03:04:05.678Z",
              "updated_at": "2022-05-15T06:05:04.321Z"
            }
          }
        },
        "properties": {
          "event": {
            "type": "string",
            "enum": [
              "invitee.created",
              "invitee.canceled",
              "routing_form_submission.created"
            ],
            "description": "The event that caused the webhook to fire"
          },
          "created_at": {
            "type": "string",
            "description": "The moment when the event was created (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "description": "The user who created the webhook",
            "format": "uri",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          },
          "payload": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Invitee"
              },
              {
                "$ref": "#/components/schemas/RoutingFormSubmission"
              }
            ],
            "description": "The payload for the webhook event. The data in the payload depends on the event.\n\nFor example, an `invitee.*` event produces an `Invitee` object in the payload."
          }
        },
        "required": ["event", "created_at", "created_by", "payload"]
      },
      "WebhookSubscription": {
        "x-tags": ["Webhooks"],
        "title": "Webhook Subscription",
        "type": "object",
        "description": "Webhook Subscription Object",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/webhook_subscriptions/AAAAAAAAAAAAAAAA",
            "callback_url": "https://blah.foo/bar",
            "created_at": "2019-08-24T14:15:22.123456Z",
            "updated_at": "2019-08-24T14:15:22.123456Z",
            "retry_started_at": "2019-08-24T14:15:22.123456Z",
            "state": "active",
            "events": ["invitee.created"],
            "scope": "user",
            "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "creator": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the webhook",
            "format": "uri",
            "example": "https://api.calendly.com/webhook_subscriptions/AAAAAAAAAAAAAAAA"
          },
          "callback_url": {
            "type": "string",
            "description": "The callback URL to use when the event is triggered",
            "format": "uri",
            "example": "https://blah.foo/bar"
          },
          "created_at": {
            "type": "string",
            "description": "The moment when the webhook subscription was created (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The moment when the webhook subscription was last updated (e.g. \"2020-01-02T03:04:05.678123Z\")",
            "format": "date-time"
          },
          "retry_started_at": {
            "type": "string",
            "description": "The date and time the webhook subscription is retried",
            "format": "date-time",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Indicates if the webhook subscription is \"active\" or \"disabled\"",
            "enum": ["active", "disabled"]
          },
          "events": {
            "type": "array",
            "description": "A list of events to which the webhook is subscribed",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "invitee.created",
                "invitee.canceled",
                "routing_form_submission.created"
              ]
            }
          },
          "scope": {
            "type": "string",
            "enum": ["user", "organization"],
            "description": "The scope of the webhook subscription",
            "example": "user"
          },
          "organization": {
            "type": "string",
            "description": "The URI of the organization that's associated with the webhook subscription",
            "format": "uri",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          },
          "user": {
            "type": "string",
            "description": "The URI of the user that's associated with the webhook subscription",
            "format": "uri",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "format": "uri",
            "description": "The URI of the user who created the webhook subscription",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "nullable": true
          }
        },
        "required": [
          "uri",
          "callback_url",
          "created_at",
          "updated_at",
          "retry_started_at",
          "state",
          "events",
          "scope",
          "organization",
          "user",
          "creator"
        ]
      },
      "InviteeNoShow": {
        "title": "InviteeNoShow",
        "type": "object",
        "description": "Information about an invitees no show.",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/no_shows/40a3cb54-e45c-4f34-b100-bd346220a5bb",
            "invitee": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2/invitees/7c1dbe46-bd84-42e2-9b97-05e2fb379bfe",
            "created_at": "2019-01-02T03:04:05.678123Z"
          }
        },
        "x-tags": ["Scheduled Events"],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/invitee_no_shows/6ee96ed4-83a3-4966-a278-cd19b3c02e09",
            "description": "Canonical reference (unique identifier) for the no show"
          },
          "invitee": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/scheduled_events/e7cb69b9-8f2a-4008-99b5-22ddbc02a2bc/invitees/e5fdc32a-e2e3-4bcf-82d3-ecf098280aaa",
            "description": "Canonical reference (unique identifier) for the associated Invitee"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678123Z",
            "description": "The moment when the no show was created"
          }
        },
        "required": ["uri", "invitee", "created_at"]
      },
      "RoutingForm": {
        "title": "Routing Form",
        "x-stoplight": {
          "id": "f7bpu3llb2u61"
        },
        "type": "object",
        "description": "Information about a routing form.",
        "x-tags": ["Routing Forms"],
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/routing_forms/AAAAAAAAAAAAAAAA",
            "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "name": "ACME Routing Form",
            "status": "published",
            "questions": [
              {
                "uuid": "123e4567-e89b-12d3-a456-426614174000",
                "name": "What is your industry?",
                "type": "select",
                "required": true,
                "answer_choices": [
                  "IT & Software",
                  "Financial Services",
                  "Entertainment"
                ]
              },
              {
                "uuid": "1213f8f1-57fd-45ee-88e9-1978d35b5cad",
                "name": "Email",
                "type": "email",
                "required": true,
                "answer_choices": null
              }
            ],
            "created_at": "2022-05-15T03:04:05.678Z",
            "updated_at": "2022-05-15T06:05:04.321Z"
          }
        },
        "x-internal": false,
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/routing_forms/AAAAAAAAAAAAAAAA",
            "description": "Canonical reference (unique identifier) for the routing form.\n"
          },
          "organization": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "description": "The URI of the organization that's associated with the routing form."
          },
          "name": {
            "type": "string",
            "description": "The routing form name (in human-readable format).",
            "example": "ACME Demo"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "published"],
            "description": "Indicates if the form is in \"draft\" or \"published\" status."
          },
          "questions": {
            "type": "array",
            "description": "An ordered collection of Routing Form non-deleted questions.",
            "items": {
              "$ref": "models/routing-forms/Question.yaml"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The moment the routing form was created.",
            "example": "2022-01-02T03:04:05.678123Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-02T03:04:05.678123Z",
            "description": "The moment when the routing form was last updated."
          }
        },
        "required": [
          "uri",
          "organization",
          "name",
          "status",
          "questions",
          "created_at",
          "updated_at"
        ]
      },
      "RoutingFormSubmission": {
        "title": "Routing Form Submission",
        "x-stoplight": {
          "id": "0h0yc6zqigbmt"
        },
        "x-tags": ["Routing Forms"],
        "type": "object",
        "x-internal": false,
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/routing_form_submissions/AAAAAAAAAAAAAAAA",
            "routing_form": "https://api.calendly.com/routing_forms/AAAAAAAAAAAAAAAA",
            "questions_and_answers": [
              {
                "question_uuid": "123e4567-e89b-12d3-a456-426614174000",
                "question": "What is your industry?",
                "answer": "IT & Software"
              }
            ],
            "tracking": {
              "utm_campaign": null,
              "utm_source": null,
              "utm_medium": null,
              "utm_content": null,
              "utm_term": null,
              "salesforce_uuid": null
            },
            "result": {
              "type": "event_type",
              "value": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2"
            },
            "submitter": "https://calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
            "submitter_type": "Invitee",
            "created_at": "2022-05-15T03:04:05.678Z",
            "updated_at": "2022-05-15T06:05:04.321Z"
          }
        },
        "description": "Information about a Routing Form Submission.",
        "properties": {
          "uri": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the routing form submission.",
            "example": "https://api.calendly.com/routing_form_submissions/AAAAAAAAAAAAAAAA",
            "format": "uri"
          },
          "routing_form": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/routing_forms/AAAAAAAAAAAAAAAA",
            "description": "The URI of the routing form that's associated with the submission."
          },
          "questions_and_answers": {
            "type": "array",
            "description": "All Routing Form Submission questions with answers.",
            "items": {
              "$ref": "models/routing-forms/SubmissionQuestionAndAnswer.yaml"
            }
          },
          "tracking": {
            "$ref": "models/routing-forms/SubmissionTracking.yaml"
          },
          "result": {
            "$ref": "models/routing-forms/SubmissionResult.yaml"
          },
          "submitter": {
            "type": "string",
            "example": "https://calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
            "description": "The reference to the Invitee resource when routing form submission results in a scheduled meeting.",
            "format": "uri",
            "nullable": true
          },
          "submitter_type": {
            "type": "string",
            "enum": ["Invitee"],
            "description": "Type of the respondent resource that submitted the form and scheduled a meeting.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The moment the routing form was submitted.",
            "format": "date-time",
            "example": "2022-01-02T03:04:05.678123Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-02T03:04:05.678123Z",
            "description": "The moment when the routing form submission was last updated."
          }
        },
        "required": [
          "uri",
          "routing_form",
          "questions_and_answers",
          "tracking",
          "submitter",
          "submitter_type",
          "created_at",
          "updated_at"
        ]
      },
      "EventTypeAvailableTime": {
        "x-tags": ["Event Types"],
        "type": "object",
        "description": "An available meeting time slot for the given event type",
        "title": "Event Type Available Time",
        "x-examples": {
          "Example": {
            "status": "available",
            "invitees_remaining": 2,
            "start_time": "2020-01-02T20:00:00.000000Z",
            "scheduling_url": "https://calendly.com/acmesales/discovery-call/2020-01-02T20:00:00Z?month=2020-01&date=2020-01-02"
          }
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "Indicates that the open time slot is \"available\"",
            "example": "available"
          },
          "invitees_remaining": {
            "type": "number",
            "description": "Total remaining invitees for this available time. For Group Event Type, more than one invitee can book in this available time. For all other Event Types, only one invitee can book in this available time.",
            "example": 2
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The moment the event was scheduled to start in UTC time",
            "example": "2020-01-02T20:00:00.000000Z"
          },
          "scheduling_url": {
            "type": "string",
            "description": "The URL of the userâ€™s scheduling site where invitees book this event type",
            "format": "uri",
            "example": "https://calendly.com/acmesales/discovery-call/2020-01-02T20:00:00Z?month=2020-01&date=2020-01-02"
          }
        },
        "required": [
          "status",
          "invitees_remaining",
          "start_time",
          "scheduling_url"
        ]
      },
      "UserBusyTime": {
        "x-internal": false,
        "x-tags": ["Availability"],
        "type": "object",
        "title": "User Busy Time",
        "description": "An internal or external scheduled event for a given user",
        "x-examples": {
          "Example": {
            "type": "calendly",
            "start_time": "2020-01-02T20:00:00.000000Z",
            "end_time": "2020-01-02T20:30:00.000000Z",
            "buffered_start_time": "2020-01-02T19:30:00.000000Z",
            "buffered_end_time": "2020-01-02T21:00:00.000000Z",
            "event": {
              "uri": "https://api.calendly.com/scheduled_events/abc123"
            }
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates whether the scheduled event is internal or external",
            "enum": ["calendly", "external"],
            "example": "calendly"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The start time of the scheduled event in UTC time",
            "example": "2020-01-02T20:00:00.000000Z"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "The end time of the scheduled event in UTC time",
            "example": "2020-01-02T20:30:00.000000Z"
          },
          "buffered_start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The start time of the calendly event, as calculated by any \"before\" buffer set by the user",
            "example": "2020-01-02T19:30:00.000000Z"
          },
          "buffered_end_time": {
            "type": "string",
            "format": "date-time",
            "description": "The end time of the calendly event, as calculated by any \"after\" buffer set by the user",
            "example": "2020-01-02T21:00:00.000000Z"
          },
          "event": {
            "type": "object",
            "required": ["uri"],
            "properties": {
              "uri": {
                "type": "string",
                "format": "uri",
                "description": "The uri associated with the calendly scheduled event"
              }
            }
          }
        },
        "required": ["type", "start_time", "end_time"]
      },
      "AvailabilitySchedule": {
        "title": "User Availability Schedule",
        "x-stoplight": {
          "id": "nd8xy6bxygyiq"
        },
        "type": "object",
        "description": "The availability schedule set by the user.",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/user_availability_schedule/abc123",
            "default": true,
            "name": "Working Hours",
            "user": "https://api.calendly.com/users/abc123",
            "rules": [
              {
                "type": "wday",
                "intervals": [
                  {
                    "from": "08:30",
                    "to": "17:00"
                  }
                ],
                "wday": "monday"
              },
              {
                "type": "wday",
                "intervals": [
                  {
                    "from": "08:30",
                    "to": "17:00"
                  }
                ],
                "wday": "tuesday"
              },
              {
                "type": "wday",
                "intervals": [],
                "wday": "wednesday"
              },
              {
                "type": "wday",
                "intervals": [
                  {
                    "from": "08:30",
                    "to": "17:00"
                  }
                ],
                "wday": "thursday"
              },
              {
                "type": "wday",
                "intervals": [
                  {
                    "from": "08:30",
                    "to": "17:00"
                  }
                ],
                "wday": "friday"
              },
              {
                "type": "wday",
                "intervals": [],
                "wday": "saturday"
              },
              {
                "type": "date",
                "intervals": [
                  {
                    "from": "08:30",
                    "to": "09:30"
                  }
                ],
                "date": "2028-12-31"
              }
            ],
            "timezone": "America\\/New_York"
          }
        },
        "x-tags": ["Availability"],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/user_availability_schedule/abc123",
            "description": "A URI reference to this Availability Schedule."
          },
          "default": {
            "type": "boolean",
            "description": "This is the default Availability Schedule in use."
          },
          "name": {
            "type": "string",
            "example": "Working Hours",
            "description": "The name of this Availability Schedule."
          },
          "user": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/users/abc123",
            "description": "A URI reference to a User."
          },
          "timezone": {
            "type": "string",
            "example": "America/New_York",
            "description": "The timezone for which this Availability Schedule is originated in."
          },
          "rules": {
            "type": "array",
            "description": "The rules of this Availability Schedule.",
            "items": {
              "$ref": "#/components/schemas/AvailabilityRule"
            }
          }
        },
        "required": ["uri", "default", "name", "user", "timezone", "rules"],
        "x-internal": false
      },
      "AvailabilityRule": {
        "title": "Availability Rule",
        "x-stoplight": {
          "id": "a1hurebl7s3c6"
        },
        "type": "object",
        "x-examples": {
          "wday": {
            "type": "wday",
            "intervals": [
              {
                "from": "08:30",
                "to": "09:30"
              }
            ],
            "wday": "sunday"
          },
          "date": {
            "type": "date",
            "intervals": [
              {
                "from": "08:30",
                "to": "09:30"
              }
            ],
            "date": "2028-12-31"
          }
        },
        "x-internal": false,
        "description": "The rules for an availability schedule.",
        "x-tags": ["Availability"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["wday", "date"],
            "example": "wday",
            "description": "The type of this Availability Rule; can be \"wday\" or a specific \"date\"."
          },
          "intervals": {
            "type": "array",
            "description": "The intervals to be applied to this Rule. Each interval represents when booking a meeting is allowed. If the interval array is empty, then there is no booking availability for that day. Time is in 24h format (i.e. \"17:30\") and local to the timezone in the Availability Schedule.",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "Format: `\"hh:mm\"`",
                  "pattern": "(\\d\\d):(\\d\\d)",
                  "example": "08:30"
                },
                "to": {
                  "type": "string",
                  "description": "Format: `\"hh:mm\"`",
                  "pattern": "(\\d\\d):(\\d\\d)",
                  "example": "09:30"
                }
              }
            }
          },
          "wday": {
            "type": "string",
            "enum": [
              "sunday",
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday"
            ],
            "description": "The day of the week for which this Rule should be applied to."
          },
          "date": {
            "type": "string",
            "example": "2022-12-31",
            "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
            "description": "A specific date in the future that this should be applied to (i.e. \"2030-12-31\")."
          }
        },
        "required": ["type", "intervals"]
      }
    },
    "responses": {
      "INVALID_ARGUMENT": {
        "description": "Request is not valid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "models/ErrorResponse.yaml"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": ["Invalid Argument"]
                    },
                    "message": {
                      "type": "string",
                      "enum": ["The supplied parameters are invalid."]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "UNAUTHENTICATED": {
        "description": "Cannot authenticate caller",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "models/ErrorResponse.yaml"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": ["Unauthenticated"]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The access token is invalid",
                        "The access token expired",
                        "The access token was revoked"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "PERMISSION_DENIED": {
        "description": "Caller not authorized to perform this action",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "models/ErrorResponse.yaml"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": ["Permission Denied"]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "You do not have permission to access this resource.",
                        "You do not have permission"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "NOT_FOUND": {
        "description": "Requested resource not found",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "models/ErrorResponse.yaml"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": ["Resource Not Found"]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The server could not find the requested resource."
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "example-1": {
                "value": {
                  "title": "Resource Not Found",
                  "message": "The server could not find the requested resource.",
                  "details": [
                    {
                      "parameter": "string",
                      "message": "string"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "UNKNOWN": {
        "description": "An error has occurred on the server",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "models/ErrorResponse.yaml"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": ["Internal Server Error"]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The server encountered an unexpected condition that prevented it from fulfilling the request."
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "ALREADY_EXISTS": {
        "description": "Attempt to create a resource that already exists",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "models/ErrorResponse.yaml"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": ["Already Exists"]
                    },
                    "message": {
                      "type": "string",
                      "enum": ["The resource already exists"]
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "Count": {
        "name": "count",
        "description": "The number of rows to return",
        "in": "query",
        "schema": {
          "type": "number",
          "default": 20,
          "minimum": 1,
          "maximum": 100
        }
      },
      "PageToken": {
        "name": "page_token",
        "description": "The token to pass to get the next or previous portion of the collection",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "User": {
        "name": "user",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uri",
          "example": "https://api.calendly.com/users/abc123"
        },
        "description": "A URI reference to a user"
      }
    }
  }
}
